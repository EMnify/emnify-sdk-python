emnify.modules.sim.api_call_manager
===================================

.. py:module:: emnify.modules.sim.api_call_manager


Classes
-------

.. autoapisummary::

   emnify.modules.sim.api_call_manager.SimListApi
   emnify.modules.sim.api_call_manager.SimActivateApi
   emnify.modules.sim.api_call_manager.SimUpdateApi
   emnify.modules.sim.api_call_manager.SimRetrieveApi


Module Contents
---------------

.. py:class:: SimListApi(*args, **kwargs)

   Bases: :py:obj:`emnify.api_manager.BaseApiManager`


   Base manager for api calls handling


   .. py:attribute:: request_url_prefix
      :value: '/v1/sim'



   .. py:attribute:: request_method_name


   .. py:attribute:: response_handlers


.. py:class:: SimActivateApi

   Bases: :py:obj:`emnify.api_manager.BaseApiManager`


   Base manager for api calls handling


   .. py:attribute:: request_url_prefix
      :value: '/v1/sim_batch/bic/{bic}'



   .. py:attribute:: request_method_name


   .. py:attribute:: response_handlers


   .. py:method:: process_exception(response: requests.Response, client, data: dict = None, *args, **kwargs)


.. py:class:: SimUpdateApi

   Bases: :py:obj:`emnify.api_manager.BaseApiManager`


   Base manager for api calls handling


   .. py:attribute:: request_url_prefix
      :value: '/v1/sim/{sim}'



   .. py:attribute:: request_method_name


   .. py:attribute:: response_handlers


   .. py:method:: process_exception(response: requests.Response, client, data: dict = None, *args, **kwargs)


.. py:class:: SimRetrieveApi

   Bases: :py:obj:`emnify.api_manager.BaseApiManager`


   Base manager for api calls handling


   .. py:attribute:: request_url_prefix
      :value: '/v1/sim/{sim}'



   .. py:attribute:: request_method_name


